{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pr\u00e1ctica 2.1 - Instalaci\u00f3n y configuraci\u00f3n de un servidor web Nginx","text":""},{"location":"#instalacion-del-servidor","title":"Instalaci\u00f3n del servidor","text":"<p>Lo primero que hice actualizar los repositorios he instalar nginx</p> <p></p> <p>Comprobamos que est\u00e9 bien instalada</p> <p></p> <p>Ahora creamos la carpeta del sitio web y clonamos el repositorio https://github.com/cloudacademy/static-website-example para poder realizar las pruebas.</p> <p></p> <p>Clonamos</p> <p></p> <p>Ahora nos aseguramos que el usuario del servicio web pueda acceder a la carpeta donde est\u00e1 alojado el servidor.</p> <p></p> <p>Por \u00faltimo comprobamos que si entramos a la ip de la m\u00e1quina esta de servicio. En mi caso, en la wifi de mi casa era 192.168.1.250</p> <p></p>"},{"location":"#configuracion-del-servidor-web","title":"Configuraci\u00f3n del servidor web","text":"<p>Ahora abordamos la correcta configuraci\u00f3n del servidor. Para ello creamos un archivo de configuraci\u00f3n en la ruta sudo nano /etc/nginx/sites-available/vuestro_dominio y configuramos el archivo.</p> <p></p> <p></p> <p>Cuidado que la directiva root debe de tener la ruta absoluta del archivo index.html</p> <p>Ahora creamos un archivo simb\u00f3lico entre este archivo y el de sitios que est\u00e1n habilitados. Esto es para que el servidor sepa que nuestro sitio web est\u00e1 habilitado.</p> <p></p> <p>Por \u00faltimo reiniciamos el servicio.</p> <p></p> <p>Ahora comprobamos que todo haya sido configurado correctamente. Primero antes de nada modificaremos el archivo /etc/hosts para que nuestra m\u00e1quina anfitriona asocie la IP de la m\u00e1quina virtual con el nombre del servidor</p> <p></p> <p>Para terminar esta parte comprobaremos los registros del servidor. Miraremos primero el log de las peticiones correctas y despu\u00e9s las incorrectas, para ver si se registran correctamente.</p> <p></p> <p>EL de las incorrectas</p> <p></p>"},{"location":"#ftp","title":"FTP","text":"<p>Lo primero que debemos de hacer es descargar vsftpd</p> <p></p> <p>Ahora creamos el directorio donde vamos a copiar las cosas y creamos los certificados de seguridad necesarios</p> <p></p> <p></p> <p>Ahora vamos al archivo de configuraci\u00f3n y despu\u00e9s de eliminar las siguientes lineas: </p> <pre><code>rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\nrsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\nssl_enable=NO\n</code></pre> <p>a\u00f1adimos:</p> <p></p> <p>Despu\u00e9s reiniciamos el servicio e instalamos filezilla</p> <p></p> <p></p> <p>Ahora entramos en el filezilla. Para conectarnos en la parte de servidor ponemos la ip de este, despu\u00e9s el nombre del usuario con el que accedemos. Si entramos por el puerto 22 que es el de SFTP no hace falta poner contrase\u00f1a. Esto es porque el servidor ya tiene mi clave p\u00fablica ssh. </p> <p></p> <p>Como vemos sale el certificado que hemos configurado antes con openssl. Ahora transferimos un archivo para hacer la comprobaci\u00f3n de que funciona bien.</p> <p></p>"},{"location":"#https","title":"HTTPS","text":"<p>Para esto tenemos que generar otro grupo de claves ssl y creamos un directorio que las contenga</p> <p></p> <p>Generamos la clave</p> <p></p> <p>Modificamos el archivo de configuraci\u00f3n de Nginx para que oiga las peticiones al puerto 443 y redireccionamos las peticiones del puerto 80. </p> <p></p> <p>Por \u00faltimo comprobamos que funcione</p> <p></p> <p></p>"}]}